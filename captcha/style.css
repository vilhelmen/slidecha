html,
body {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
    font-size: 0.9em;

    /* for legal reasons I don't think I'm allowed to say how I feel about the implementors behind this */
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none; /* lol WebStorm saying this isn't real take that *checks notes* Konqueror */
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

:root {
    --highlighted-opacity: 0.3;
    --lowlighted-opacity: 0.3;
    --hover-opacity: 0.3;
    --horz-padding: 0px; /* the last damn thing I can't make relative I hate you */
    --nice-red: #ff3030;
    /* well I like that red I made so... surely the green version is nice? */
    /* ...actually it's not bad. a bit saturated. */
    --nice-green: #30ff30;
    /* tbh I think it looks best when tile-overlay is applying a highlight */
    --nicer-red: #f17e78;
    --nicer-green: #7ef178;
    --slide-timing: 0.3s;
    --board-padding: 2px;
    --spin-duration: 2s;
    --spin-direction: normal;
    --fixed-rotation-angle: 0deg;

    --button-flash-animation-params: flashBrightness 0.1s linear forwards;
    --id-flash-animation-params: idFlash 0.8s linear forwards;
    --jump-animation-params: jump 1.5s linear forwards infinite;
    --jump2-animation-params: jump2 1.5s linear forwards infinite;
}

#captcha-container {
    background: white;
    width: 390px;
    height: 300px;
    display: grid;
    /* 8px is PERFECT at 390x300. I wish I could do an fr that good it's 2/75ths and that's .0266666... */
    /* ...pixels are like fractional units if you think about it, or maybe if you don't */
    grid-template-columns: 234fr 0fr 156fr;
    overflow: hidden;
}

/* I'm still in a dream */
#click-eater {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 20;

    opacity: 0;
    cursor: pointer;
    background: transparent;

    pointer-events: none;
    visibility: hidden;
    /*  changes to pointer-events kills animations so you have to trick it with visibility */
    transition: opacity 0.3s ease, background-color 0.3s ease, visibility 0s 0.3s;
}

#click-eater.active {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
    transition: opacity 0.3s ease, background-color 0.3s ease, visibility 0s;
}

#click-eater.reset {
    background-color: rgba(0, 0, 0, 0.5);
}
#click-eater.info {
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
}
#click-eater.block {
    visibility: visible;
    /* ok so turns out setting this to none just means click through, not block */
    pointer-events: auto;
    cursor: unset;
}
#click-eater.loser {
    z-index: 35;
}

#right-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
}
#left-container {
    display: grid;
    grid-template-rows: 234fr 66fr;
    height: 100%;
}

.vertical-divider {
    height: 100%;
    background: lightgray;
}

.horizontal-divider {
    height: var(--horz-padding);
    width: 100%;
    background: lightgray;
    flex-shrink: 0;
    box-sizing: border-box;
}

#dynamic-top-left,
#dynamic-top-right {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
    flex-basis: auto;
    width: 100%;
}

/* No, I don't entirely understand this, I just add things to it. why do you ask? */
#captcha-container > div,
#left-container > div,
#right-container > div,
#addon-container > div,
#dynamic-top-left,
#dynamic-top-right,
#puzzle-holder,
#solution-holder,
#control-holder > *,
.tile-base,
.puzzle-tile,
.control-tile {
    min-height: 0;
    min-width: 0;
}

#puzzle-holder,
#solution-holder,
#addon-holder {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
    flex-basis: auto;
    box-sizing: border-box;
    width: 100%;
    position: relative;
}

#control-holder {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    flex-basis: 0;
    width: 100%;
    box-sizing: border-box;
    min-height: 0;
    position: relative;
}

#puzzle-container,
#solution-container,
#control-container,
#addon-container {
    display: grid;
    gap: 0;
    box-sizing: border-box;
    width: 100%;
    min-height: 0;
    min-width: 0;
}

#puzzle-container,
#solution-container {
    aspect-ratio: 1;
    border: darkgrey groove var(--board-padding);
    background: darkgrey;
    gap: 0;
}
#puzzle-container .tile-base {
    cursor: pointer;
}

#control-container {
    position: relative;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(3, 1fr);
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0;
    background-color: #D3D3D3;
}

#solution-preview img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

.tile-fuzz {
    position: absolute;
    display: flex;
    top: var(--board-padding);
    left: var(--board-padding);
    bottom: var(--board-padding);
    right: var(--board-padding);
    opacity: 1;
    backdrop-filter: blur(8px);
    z-index: 20;
    pointer-events: auto;
    transition: opacity 2s ease, backdrop-filter 2s 0s ease;
    justify-content: center;
    align-items: center;
}

.tile-fuzz.reveal {
    opacity: 0;
    backdrop-filter: none;
    pointer-events: none;
}
/* temp style to let me break the transition */
.tile-fuzz.noanim {
    transition: none;
}
.tile-fuzz svg {
    aspect-ratio: 1;
    width: 40%;
    height: 40%;
    animation: rotateSvg 2s linear infinite;
}

.tile-base {
    position: relative;
    width: 100%;
    height: 100%;
    /* cursor: pointer;  not for blank tiles, move to overlay */
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
}

.puzzle-tile,
.control-tile,
.tile-overlay {
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    aspect-ratio: 1;
    height: 100%;
    min-height: 0;
    width: 100%;

    /* tbh I have no idea what this is going to do yet*/
    transition: transform 0.3s ease-out;
}

.puzzle-tile {
    background-repeat: no-repeat;
}

.tile-overlay {
    pointer-events: none;
}

.control-tile {
    aspect-ratio: unset;
}

.active-tile {
    outline: #666 groove 3px;
    outline-offset: -3px;
}

/* bad news, idk why this doesn't work */
/* worse news, I fixed it */
#captcha-container.spinnnnn  .puzzle-tile > svg {
    animation: spinnnnn var(--spin-duration, 2s) linear infinite var(--spin-direction, normal);
}
@keyframes spinnnnn {
    /* Start from the fixed angle */
    from { transform: rotate(var(--fixed-rotation-angle, 0deg)); }
    /* End at the fixed angle + 360 degrees */
    to   { transform: rotate(calc(var(--fixed-rotation-angle, 0deg) + 360deg)); }
}

/*
idk!
.active-tile {
  border: var(--active-border-width) var(--active-border-style) var(--active-border-color);
}
*/

.puzzle-tile svg,
.control-tile svg,
.tile-overlay svg,
#addon-humanity svg {
    display: block;
    max-width: 80%;
    max-height: 80%;
    aspect-ratio: 1;
    /*box-sizing: border-box;
    border: 1px dashed orange;*/
    object-fit: contain;
    pointer-events: none;
    transform-origin: center;
}

.tile-base .tile-overlay {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: #000000;
    cursor: pointer;
    z-index: 10;

    transition: opacity 0.3s ease, transform 0.3s ease, background-color 0.3s ease, width 0.3s ease-in-out;

    --current-base-opacity: 0;
    opacity: var(--current-base-opacity);
}

.tile-base .puzzle-tile {
    z-index: 9;
}

.control-tile .tile-overlay {
    background: white;
}

/*.tile-overlay > svg {
  opacity: 0;
  max-width: unset;
  max-height: unset;
  transition: opacity 0.3s ease;
}
.tile-overlay.active-tile > svg {
  opacity: 1;
}*/

.tile-base .tile-overlay.highlighted {
    background: white;
    --current-base-opacity: var(--highlighted-opacity);
}

.tile-base .lowlighted {
    background: black;
    --current-base-opacity: var(--lowlighted-opacity);
}

.tile-base:hover .tile-overlay {
    opacity: calc(var(--current-base-opacity) + var(--hover-opacity));
}

#control-container {
    fill: black;
}
#control-container .tile-base {
    cursor: pointer;
}

#control-1 svg,
#control-7 svg {
    height: 65%;
}
#control-9 svg {
    height: 70%;
}

#control-5 {
    cursor: default !important;
}

#control-3,
#control-7 {
    fill: var(--nice-red);
}
#control-7.start {
    background-color: var(--nicer-green);
    fill: #666;
}

#control-3 .tile-overlay,
#control-7 .tile-overlay {
    z-index: 12;
}

#control-3 .tile-overlay {
    right: 0;
    left: auto;
    width: 100%;
}

#control-7 .tile-overlay {
    left: 0;
    right: auto;
    width: 100%;
}


#control-3.active svg,
#control-7.active svg,
#control-3.active .tile-overlay,
#control-7.active .tile-overlay,
#control-3.active .control-tile,
#control-7.active .control-tile {
    z-index: 30;
}

#control-3.active .control-tile,
#control-7.active .control-tile {
    background: var(--nice-red);
    fill: white;
}

#control-3.active .tile-overlay,
#control-7.active .tile-overlay {
    width: 300%;
}

/* UGH THIS IS SO BUSTED> I can't get it to transition back to 0 deg after deactivating without snapping*/
#control-3 svg {
    transform-origin: center;
    animation: rotateSvg 2s linear infinite paused;
}

#control-3.active svg {
    animation-play-state: running;
}

@keyframes rotateSvg {
    0% {transform: rotate(0deg);}
    100% {transform: rotate(360deg);}
}

#reset-confirm,
#quit-confirm {
    position: absolute;
    visibility: hidden;
    background-color: var(--nice-red);
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 0;
    overflow: hidden;

    /* important for quit because 8 and 9 have higher z because they're later? */
    z-index: 11;

    /*opacity: 0;*/
    pointer-events: none;
    transition: background-color 0.3s ease, opacity 0.3s ease, width 0.3s ease-in-out, visibility 0s 0.3s;
}

#reset-confirm {
    right: 100%;
}

#quit-confirm {
    left: 100%;
}

#reset-confirm.active,
#quit-confirm.active {
    visibility: visible;
    pointer-events: auto;
    z-index: 29;
    background-color: var(--nice-red);
    width: 200%;
    transition: background-color 0.3s ease, opacity 0.3s ease, width 0.3s ease-in-out, visibility 0s;
}
#quit-confirm.start,
#control-7.start.active .control-tile {
    background-color: var(--nicer-green) !important;
    color: #666 !important;
    fill: #666 !important;
}

#reset-confirm span,
#quit-confirm span {
    white-space: nowrap;
    text-align: center;
    width: 100%;
}

#reset-confirm span {
    transition: right 0.3s ease-in-out;
    right: -100%;
    left: 0;
}

#quit-confirm span {
    transition: left 0.3s ease-in-out;
    left: -100%;
    right: 0;
}

#reset-confirm.active span {
    left: 0;
}

#quit-confirm.active span {
    left: 0;
}

#control-9 svg {
    transform: rotate(-45deg);
    transition: transform 0.3s ease;
}

#control-9.active svg {
    transform: rotate(-45deg) scale(-1, 1);
}

#control-1 svg,
#control-2 svg,
#control-4 svg,
#control-6 svg,
#control-8 svg {
    animation: var(--button-flash-animation-params) paused;
}

@keyframes flashBrightness {
    0%, 100% {opacity: 1;}
    50% {opacity: 0.3}
}

#quit-icon {
    animation: var(--jump-animation-params) paused;
}
#play-icon {
    /* ugh whatever just make another */
    animation: var(--jump2-animation-params) paused;
}

#control-7.start #quit-icon {
    display: none;
}
#control-7:not(.start) #play-icon {
    display: none;
}

#control-7.active:not(.start) #quit-icon,
#control-7.start.active #play-icon {
    animation-play-state: running;
}


@keyframes jump {
    0%, 100% {transform: translateY(0);}
    8% {transform: translateY(-12%);}
    90% {transform: translateY(12%);}
}
/* I'M TOO STUPID!! */
@keyframes jump2 {
    0%, 100% {transform: translateX(0);}
    8% {transform: translateX(12%);}
    90% {transform: translateX(-12%);}
}

.info-panel {
    position: absolute;
    opacity: 0;
    color: white;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: opacity 0.1s ease;

    outline: 2px dashed white;
    outline-offset: -4px;

    pointer-events: none;
}
p {
    /* idk man I just wanna put words on the page */
    margin: unset;
}

.info-panel.active {
    opacity: 1;
    z-index: 25;
}
.info-body {
    position: absolute;
    height: auto;
    width: auto;
}

#puzzle-holder .info-body {
    top: 5%;
    left: 5%;
    right: 20%;
    bottom: 5%;
}
#addon-holder .info-panel {
    justify-content: center;
    align-items: center;
    display: flex;
}
#addon-holder .info-body {
    top: 2%;
    bottom: 2%;
    left: 4%;
    right: 20%;
    display: flex;
    align-items: center;
    text-align: center;
}
#control-holder .info-body,
#solution-holder .info-body {
    top: 5%;
    left: 5%;
    right: 5%;
}

.container-id {
    aspect-ratio: 1;
    position: absolute;
    bottom: 4px;
    right: 4px;
    opacity: 0;
    pointer-events: none;

    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 25;
    background: black;
    border-radius: 0.5em;
}

.container-id.active {
    opacity: 1;
    background: unset;
}

.container-id svg {
    width: 80%;
    height: 80%;
    fill: white;
}

#puzzle-holder .container-id,
#solution-holder .container-id {
    /* my large adult sons are simply too tall */
    width: 25%;
    height: 25%;
}
#control-holder .container-id {
    width: 42%;
    height: 42%;
}
#addon-holder .container-id {
    height: 70%;
    max-height: 70%;
}

@keyframes idFlash {
    0%, 100% { opacity: 0; }
    /* lmao you wanna be like this on first load then get owned */
    1%, 20% { opacity: 0.8; }
}


/* we need a place to put fake tiles to animate */
#slide-overlay {
    position: absolute;
    top: var(--board-padding);
    bottom: var(--board-padding);
    left: var(--board-padding);
    right: var(--board-padding);
    overflow: hidden;
    background: transparent;
}

#slide-overlay.active {
    z-index: 18;
    pointer-events: auto;
}

#slide-overlay .tile-base {
    transition: transform var(--slide-timing) ease;
}

/* Idk why I need gro all over I hate this so much */
#addon-holder {
    flex-grow: 1;
    background: lightgray;
}

#addon-holder svg {
    max-width: 100%;
    max-height: 100%;
}

#addon-container {
    grid-template-rows: 0.5fr 1fr 2fr;
    flex-grow: 1;
}

#addon-progress {
    display: flex;
    flex-direction: row;
    background: lightgrey;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;
    /*transition: height 0.3s ease-out;*/
}


#addon-progress > .tile-base {
    flex-grow: 0;

    flex-basis: min-content;
    aspect-ratio: 1;
    overflow: hidden;
}

#addon-progress svg {
    display: block;
    aspect-ratio: 1;
    object-fit: contain;
    pointer-events: none;
    height: 80%;
}

#addon-progress > .tile-base:nth-child(even) svg {
    transform: scaleY(-1);
}

#addon-progress > .tile-base {
    transition: transform 0.2s linear;
}
#addon-progress > .tile-base.flip {
    transform: scaleX(0);
}

/* probably toss this div eventually, god forbid it's load bearing */
#addon-upper {
    background: lightgray;
}


#addon-humanity {
    display: flex;
    flex-direction: row;

    width: 100%;
    height: 100%;
    box-sizing: border-box;
    /*justify-content: center;*/
    justify-content: center;
    gap: 5%;
    align-items: center;

    padding-left: 4%;
    padding-right: 4%;
}

#addon-humanity svg {
    max-width: 80%;
    max-height: 80%;
}

/* what do you MEAN browsers control progress bar objects too hard to style */
.progress-fill {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* gotta for new reasons (not setting the cpu on fire) */
    height: 100%;
    transform-origin: left center;
    background: var(--nice-red);
}

.progress-divider {
    content: '';
    position: absolute;
    top: 0;
    right: -4px;
    width: 4px;
    height: 100%;
    background-color: lightgray;
}

.progress-track {
    position: relative;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 0;
    height: 60%;

    background: var(--nice-green);
    overflow: hidden;
    border-radius: 0.5em;
}

#humanity,
.progress-divider {
    /* JS CANT READ THIS AAA
    width: 50%;
    */
    transition: transform 1s ease-in-out;
    /* I really wanted to animate the right edge, like make it wiggle, but I just can't */
}

#addon-humanity > .tile-base {
    flex-grow: 0;
    flex-basis: min-content;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: 1em;
}

#human-tile,
#robot-tile {
    fill: black;
}
#human-tile svg,
#robot-tile svg {
    z-index: 11;
}

#human-tile .blinker,
#robot-tile .blinker {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 10;
}

#human-tile.alert .blinker,
#robot-tile.alert .blinker {
    /* once again animations refuse to reset when active class is removed so get owned */
    animation: humanityAlert 0.8s linear infinite;
}
#human-tile .blinker {
    background-color: var(--nice-green);
}

#robot-tile .blinker {
    background-color: var(--nice-red);
}

@keyframes humanityAlert {
    0%, 80% {
        opacity: 0;
    }
    10%, 20% {
        opacity: 0.8;
    }
}

#addon-upper,
#addon-lower {
    min-height: 0;
}

#addon-lower {
    display: grid;
    flex-direction: row;
    grid-template-columns: 1fr 1.1fr;
    width: 100%;
}

#frien svg {
    aspect-ratio: 1;
    height: 80%
}


#addon-moves {
    display: flex;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;
    transition: transform 0.3s ease;
}
#addon-moves.flip {
    transform: scaleY(0);
}
#move-icon svg {
    position: absolute;
    top: 0;
    left: 0;
}

#move-icon:not(.dead) #alive {
    opacity: 1;
}
#move-icon.dead #alive {
    opacity: 0;
}
#move-icon.dead #dead {
    opacity: 1;
}
#move-icon:not(.dead) #dead {
    opacity: 0;
}

#addon-moves span {
    white-space: pre;
}

#move-icon,
#timer-icon {
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: min-content;
    aspect-ratio: 1;
    height: 60%;
}

#move-data {
    font-size: 1.5em;
    white-space: nowrap;
}


#addon-timer {
    display: flex;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;
    gap: 5%;
    transition: transform 0.3s ease;
}

#timer-icon svg {
    position: absolute;
    top: 0;
    left: 0;
}
#timer-icon {
    animation: timerWriggle 2s linear infinite paused;
}
#timer-icon:not(.stop) {
    animation-play-state: running;
}
@keyframes timerWriggle {

    0%, 100% {transform: translateY(0);}
    25% {transform: translateY(-6%);} /* lmao +-12% is so aggressive */
    75% {transform: translateY(6%);}
}
#timer-icon:not(.stop) #run {
    opacity: 1;
}
#timer-icon.stop #run {
    opacity: 0;
}
#timer-icon.stop #stop {
    opacity: 1;
}
#timer-icon:not(.stop) #stop {
    opacity: 0;
}

#addon-timer span {
    font-size: 1.2em;
    transition: transform 0.3s ease;
}
#addon-timer.flip,
#addon-moves.flip span {
    transform: scaleY(0);
}




/*#control-container {
  background: linear-gradient(to bottom, #f0f0f0, #e0e0e0);
}*/
/*
#control-container {
  background-color: #f5f5f5;
  background-image: radial-gradient(#e0e0e0 2px, transparent 2px);
  background-size: 8px 8px;
}

.control-tile,
.control-tile .tile-overlay {
  border: 1px solid #ddd;
  !*
  aahh it needs fixing wrt confirms
  border-left-color: transparent;
  *!
  border-radius: 4px;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
}

.control-tile:hover {
  background-color: #f5f5f5;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transform: translateY(-1px);
  transition: all 0.2s ease-out;
}*/
